#!/usr/bin/env bash
# @description VVV main packages and misc fixes
set -eo pipefail

function vvv_add_keys() {
  vvv_info " * Applying the Varying Vagrant Vagrants mirror signing key..."
  if ! vvv_apt_keys_has 'Varying Vagrant Vagrants'; then
    apt-key add /srv/provision/_config/apt-key-varying-vagrant-vagrants_keyserver_ubuntu.key 1> /dev/null
  fi

  vvv_info " * Applying the MariaDB signing key..."
  if ! vvv_apt_keys_has 'MariaDB'; then
    apt-key add /srv/provision/_config/apt-key-mariadb.key 1> /dev/null
  fi

  vvv_info " * Applying Nginx signing key..."
  if ! vvv_apt_keys_has 'nginx'; then
    apt-key add /srv/provision/_config/apt-key-nginx_signing.key 1> /dev/null
  fi

  vvv_info " * Applying the Ondřej PHP signing key..."
  if ! vvv_apt_keys_has 'Ondřej'; then
    apt-key add /srv/provision/_config/apt-key-ondrej_keyserver_ubuntu.key 1> /dev/null
  fi
  cp -f "/srv/provision/_config/apt-key-ondrej-ppa-pin" "/etc/apt/preferences.d/ondrej-ppa-pin"
}

function vvv_register_packages() {
  local OSID=$(lsb_release --id --short)
  local OSCODENAME=$(lsb_release --codename --short)
  local APTSOURCE="/srv/provision/_config/sources-${OSID,,}-${OSCODENAME,,}.list"
  if [ -f "${APTSOURCE}" ]; then
    cp -f "${APTSOURCE}" "/etc/apt/sources.list.d/vvv-sources.list"
  else
    vvv_error "VVV could not copy an Apt source file ( ${APTSOURCE} ), the current OS/Version (${OSID,,}-${OSCODENAME,,}) combination is unavailable"
  fi

  vvv_add_keys

  VVV_PACKAGE_REMOVAL_LIST+=(
    python-pip
    python-setuptools
    mysql-common
  )

  VVV_PACKAGE_LIST+=(
    software-properties-common
    subversion
    zip
    unzip
    ngrep
    curl
    make
    vim
    colordiff
    python3-pip
    python3-setuptools
    lftp
    ntp
    ntpdate
    gettext
    dos2unix
    libwebp-dev
    webp
  )
}
vvv_add_hook before_packages vvv_register_packages 0

function shyaml_setup() {
  # Shyaml
  #
  # Used for passing custom parameters to the bash provisioning scripts
  if [ ! -f /usr/local/bin/shyaml ]; then
    vvv_info " * Installing Shyaml for bash provisioning.."
    sudo pip3 install wheel 1> /dev/null
    sudo pip3 install shyaml 1> /dev/null
  fi
}
export -f shyaml_setup

vvv_add_hook after_packages shyaml_setup 0

vvv_add_hook services_restart "service ntp restart"

function cleanup_vvv(){
  # Cleanup the hosts file
  vvv_info " * Cleaning the virtual machine's /etc/hosts file..."
  sed -n '/# vvv-auto$/!p' /etc/hosts > /tmp/hosts
  echo "127.0.0.1 vvv # vvv-auto" >> "/etc/hosts"
  echo "127.0.0.1 vvv.test # vvv-auto" >> "/etc/hosts"
  mv /tmp/hosts /etc/hosts
}
export -f cleanup_vvv

vvv_add_hook finalize cleanup_vvv 15

function apt_hash_missmatch_fix() {
  if [ ! -f "/etc/apt/apt.conf.d/99hashmismatch" ]; then
    vvv_info " * Writing /etc/apt/apt.conf.d/99hashmismatch"
    tee /etc/apt/apt.conf.d/99hashmismatch <<EOF > /dev/null
Acquire::http::Pipeline-Depth 0;
Acquire::http::No-Cache true;
Acquire::BrokenProxy    true;
Acquire::CompressionTypes::Order::=gz;
EOF
  fi
}
export -f apt_hash_missmatch_fix
vvv_add_hook init apt_hash_missmatch_fix

function services_restart() {
  # RESTART SERVICES
  #
  # Make sure the services we expect to be running are running.
  vvv_info " * Restarting services..."
  vvv_hook services_restart
}
vvv_add_hook finalize services_restart 1000
